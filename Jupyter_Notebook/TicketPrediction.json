{"paragraphs":[{"text":"import org.apache.spark.sql.SparkSession\nimport org.apache.spark.sql.functions._\nimport org.apache.spark.sql.types.IntegerType\nimport org.apache.spark.ml.linalg.Vectors\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}\n//import org.apache.spark.ml.feature.{Imputer, ImputerModel}\nimport org.apache.spark.sql.{SQLContext, Row, DataFrame, Column}\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer, IndexToString} \nimport org.apache.spark.ml.feature.{VectorAssembler, VectorIndexer}\nimport org.apache.spark.ml.feature.{Bucketizer,Normalizer}\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n//import ml.dmlc.xgboost4j.scala.spark.{XGBoostEstimator, XGBoostClassificationModel}\nimport scala.collection.mutable\n\nval PATH = \"file:///Users/zacha/Desktop/Projects/TicketPrediction/\"\n\n//load the data\nval training_df = spark.read.option(\"header\",\"true\").format(\"csv\").load(PATH + \"TRAINING_Traffic_Stops__drivers.csv\")\n\n/*\nFeatures Data Frame Columns\n#   Address (Road)\n#   Action Taken Id (Citation | No Citation)\n#   Date (Time) \n#   Vehicle Make \n#   Vehicle Model \n#   Vehicle Year \n#   License Plate State \n#   Sex\n#   Race \n#   Age range\n*/\nval featureFrame = (\n    training_df\n        .withColumn(\"Road\",regexp_extract($\"ADDRESS_X\",raw\"X[\\s]+([A-Z0-9]+[A-Z0-9\\s]*)\",1))\n        .withColumn(\"Ticketed\", when($\"ACTIONTAKENCIDID\" === 3,1).otherwise(0))\n        .withColumn(\"Time\", regexp_extract($\"INTERVIEW_DATE\",(raw\"([\\d]{2}:[\\d]{2}:[\\d]{2}\\s[A-Z]{2})\"),1))\n        .withColumn(\"CarMake\",$\"VEHICLE_MAKE\")\n        .withColumn(\"CarModel\",$\"VEHICLE_MODEL\")\n        .withColumn(\"CarYear\",$\"VEHICLE_YEAR\")\n        .withColumn(\"CarPlateState\",$\"LICENSE_PLATE_STATE\")\n        .withColumn(\"Sex\", $\"SEX\")\n        .withColumn(\"Race\", $\"RACE\")\n)\n\nfeatureFrame.select($\"Road\",$\"Ticketed\",$\"Time\",$\"CarMake\",$\"CarModel\",$\"CarYear\",$\"CarPlateState\",$\"Sex\",$\"Race\").show()\n","user":"anonymous","dateUpdated":"2017-08-27T01:22:40-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\nimport org.apache.spark.sql.SparkSession\n\nimport org.apache.spark.sql.functions._\n\nimport org.apache.spark.sql.types.IntegerType\n\nimport org.apache.spark.ml.linalg.Vectors\n\nimport org.apache.spark.ml.{Pipeline, PipelineModel}\n\nimport org.apache.spark.ml.tuning.{ParamGridBuilder, CrossValidator}\n\nimport org.apache.spark.sql.{SQLContext, Row, DataFrame, Column}\n\nimport org.apache.spark.ml.feature.{OneHotEncoder, StringIndexer, IndexToString}\n\nimport org.apache.spark.ml.feature.{VectorAssembler, VectorIndexer}\n\nimport org.apache.spark.ml.feature.{Bucketizer, Normalizer}\n\nimport org.apache.spark.ml.evaluation.BinaryClassificationEvaluator\n\nimport scala.collection.mutable\n\nPATH: String = file:///Users/zacha/Desktop/Projects/TicketPrediction/\n\ntraining_df: org.apache.spark.sql.DataFrame = [ADDRESS_X: string, LATITUDE_X: string ... 27 more fields]\n\nfeatureFrame: org.apache.spark.sql.DataFrame = [ADDRESS_X: string, LATITUDE_X: string ... 34 more fields]\n+---------------+--------+-----------+-------+--------+-------+-------------+------+-------+\n|           Road|Ticketed|       Time|CarMake|CarModel|CarYear|CarPlateState|   Sex|   Race|\n+---------------+--------+-----------+-------+--------+-------+-------------+------+-------+\n|  MONTGOMERY RD|       1|05:23:00 PM|   NISS|    MAXI|   2011|         OHIO|  MALE|  BLACK|\n|       W 6TH ST|       0|09:11:00 PM|   VOLK|    JETT|   2014|         OHIO|  MALE|  WHITE|\n|     READING RD|       0|04:40:00 PM|   TOYT|    CORO|   2009|         OHIO|FEMALE|  BLACK|\n|      CORBLY ST|       1|04:35:00 PM|   HYUN|    ELAN|   2002|         OHIO|  MALE|  WHITE|\n|SPRING GROVE AV|       0|01:03:00 AM|   CADI|    DEVI|   1988|         OHIO|  MALE|  BLACK|\n|      ROGERS PL|       1|12:25:00 AM|  BUICK|LE SABRE|   2003|         OHIO|  MALE|  BLACK|\n|   LEXINGTON AV|       1|06:19:00 PM|   CHEV|    CAVL|   1999|         OHIO|  MALE|  BLACK|\n|     CLIFTON AV|       0|10:45:00 PM|   CHEV|    MALI|   1999|         OHIO|  MALE|  BLACK|\n|    MULBERRY ST|       1|09:31:00 PM|   CHRY|    SEBR|   2007|         OHIO|FEMALE|  BLACK|\n|     MCHENRY AV|       1|09:35:00 AM|   TOYO|    AVAL|   2005|         OHIO|  MALE|  BLACK|\n|       RIVER RD|       1|02:24:00 PM|   BUIC| LESABRE|   2002|         OHIO|  MALE|  WHITE|\n|    MILLVALE CT|       0|12:00:00 AM|   CHEV|    MALI|   2010|         OHIO|FEMALE|  BLACK|\n|    MILLVALE CT|       0|12:00:00 AM|   CHEV|    MALI|   2010|         OHIO|FEMALE|  BLACK|\n|    MILLVALE CT|       0|12:00:00 AM|   CHEV|    MALI|   2010|         OHIO|FEMALE|  BLACK|\n|    MILLVALE CT|       0|12:00:00 AM|   CHEV|    MALI|   2010|         OHIO|FEMALE|  BLACK|\n|    FLANIGAN CT|       0|07:40:00 PM|   FORD|   F-150|   1993|         OHIO|  MALE|  BLACK|\n|      WALNUT ST|       0|06:32:00 PM|   TOYO|    SOLA|   1999|         OHIO|  MALE|UNKNOWN|\n|  W MCMICKEN AV|       0|01:30:00 AM| TOYOTA|    CAMR|   1994|         OHIO|  MALE|  BLACK|\n|        GRAY RD|       1|04:25:00 PM|   CHEV|    COBA|   2006|         OHIO|  MALE|  BLACK|\n|     WINSLOW AV|       0|03:19:00 PM|   NISS|   VERSA|   2015|         OHIO|  MALE|  BLACK|\n+---------------+--------+-----------+-------+--------+-------+-------------+------+-------+\nonly showing top 20 rows\n\r\n"}]},"apps":[],"jobName":"paragraph_1503798307334_556390656","id":"20170826-214507_1908324424","dateCreated":"2017-08-26T21:45:07-0400","dateStarted":"2017-08-27T01:22:28-0400","dateFinished":"2017-08-27T01:22:44-0400","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:2079"},{"text":"val i = \"hi\"\nprint(i)\n","user":"anonymous","dateUpdated":"2017-08-27T00:46:53-0400","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala","editOnDblClick":false},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"\ni: String = hi\nhi"}]},"apps":[],"jobName":"paragraph_1503800769383_994532044","id":"20170826-222609_904774148","dateCreated":"2017-08-26T22:26:09-0400","dateStarted":"2017-08-27T00:30:02-0400","dateFinished":"2017-08-27T00:30:11-0400","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:2080"},{"user":"anonymous","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"scala"},"editorMode":"ace/mode/scala","tableHide":false},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1503807060180_-1403829564","id":"20170827-001100_1485738311","dateCreated":"2017-08-27T00:11:00-0400","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:2081","dateUpdated":"2017-08-27T00:46:53-0400"}],"name":"TicketPrediction","id":"2CSRQRET3","angularObjects":{"2CTQA8H9H:shared_process":[],"2CS12W3HZ:shared_process":[],"2CRB9NP2H:shared_process":[],"2CSTGQ6B9:shared_process":[],"2CTH8QUU8:shared_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}